syntax = "proto3";

package calculator;
option go_package = "calculatorpb";

message Calculation {
    int32 a = 1;
    int32 b = 2;
}

message CalculationRequest {
    Calculation calculation = 1;
}

message CalculationResponse {
    int32 result = 1;
}

message PrimeNumberDecompositionRequest{
    Calculation calculation = 1;
}

message PrimeNumberDecompositionResponse{
    int32 result = 1;
}

message ComputeAverageRequest{
    Calculation calculation = 1;
}

message ComputeAverageResponse{
    double result = 1;
}

message FindMaximumRequest {
    int32 integer = 1;
}

message FindMaximumResponse{
    int32 max = 1;
}

message SquareRootRequest{
    int32 number = 1;
}

message SquareRootResponse {
    double number_root = 1;
}

service CalculationService {
    // Unary call
    rpc Calculation (CalculationRequest) returns (CalculationResponse) {};

    // Server Streaming
    rpc PrimeNumberDecomposition (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {};

    // Client Streaming
    rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

    // Bi Directional Streaming
    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // error handling
    // this RPC will throw an exception if the sent number is negative
    // error type: INVALID_ARGUMENT
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {};
}